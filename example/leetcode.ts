function fourSum(nums: number[], target: number): number[][] {
  const res: number[][] = [];
  const set: Set<string> = new Set();
  /** 排序 */
  nums = nums.sort((pre, cur) => pre - cur);

  const numStr: Set<number> = new Set();
  nums.forEach(num => numStr.add(num));
  /** 去重 */
  numStr.forEach(num => {
    const first = nums.indexOf(num);
    const last = nums.lastIndexOf(num);
    const sub = last - first;
    if (sub > 3) {
      nums.splice(first, sub - 3)
    }
  });
  /** 枚举所有组合,并求和 */
  const enumFn = (params: { selectNums: number[]; startIndex: number }) => {
    const { selectNums, startIndex } = params;
    for (let i = startIndex; i < nums.length; i++) {
      const tSelectNums = [...selectNums, nums[i]];
      if (tSelectNums.length === 4) {
        const sum = tSelectNums.reduce((pre, cur) => pre + cur, 0);
        if (sum === target) {
          set.add(tSelectNums.sort((pre, cur) => pre - cur).join(','));
        }
      }
      if (tSelectNums.length < 4) {
        enumFn({
          selectNums: tSelectNums,
          startIndex: i + 1,
        });
      }
    }
  };
  enumFn({
    selectNums: [],
    startIndex: 0,
  });
  return Array.from(set).map(item => item.split(',').map(numStr => +numStr));
}

export const param: any[] = [
  [
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
  ],
  8,
];

const solution = fourSum.apply(null, param);
export { solution };
